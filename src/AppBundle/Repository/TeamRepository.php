<?php

namespace AppBundle\Repository;

use Doctrine\ORM\NoResultException;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * TeamRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TeamRepository extends ModelRepository
{

    public function standing($championshipId, $season, $limit = null)  {
        $period = $this->period($season);

        $q = $this->createQueryBuilder('t')
            ->select('t.id, t.name, t.trigram')
            ->innerJoin('AppBundle\Entity\ChampionshipTeam', 'ct', 'WITH',
                '(t = ct.team) AND (
                (ct.createdAt <= :createdAt AND ct.updatedAt IS NULL) OR
                (ct.createdAt <= :createdAt AND ct.updatedAt IS NOT NULL AND ct.updatedAt <= :updatedAt) OR
                (ct.createdAt >= :createdAt AND ct.createdAt <= :updatedAt))')
            ->innerJoin('AppBundle\Entity\Championship', 'c', 'WITH', 'c = ct.championship AND c.id = :id')
            ->where('t.deleted = 0 AND c.deleted = 0')
            ->addSelect('(SELECT CASE WHEN (COUNT(m) > 0) THEN COUNT(m) ELSE 0 END FROM AppBundle\Entity\Match as m
             INNER JOIN AppBundle\Entity\Result as r WITH m = r.match WHERE (m.home = t OR m.visitor = t) 
             AND m.season = :season AND m.championship = c) AS play'
            )
            ->addSelect('(SELECT CASE WHEN (COUNT(m1) > 0) THEN COUNT(m1) ELSE 0 END FROM AppBundle\Entity\Match as m1
             INNER JOIN AppBundle\Entity\Result as r1 WITH m1 = r1.match WHERE 
             ((m1.home = t AND r1.homeGoal > r1.visitorGoal) OR (m1.visitor = t AND r1.visitorGoal > r1.homeGoal)) 
             AND m1.season = :season AND m1.championship = c) AS win'
            )
            ->addSelect('(SELECT CASE WHEN (COUNT(m2) > 0) THEN COUNT(m2) ELSE 0 END FROM AppBundle\Entity\Match as m2
             INNER JOIN AppBundle\Entity\Result as r2 WITH m2 = r2.match WHERE 
             ((m2.home = t AND r2.homeGoal < r2.visitorGoal) OR (m2.visitor = t AND r2.visitorGoal < r2.homeGoal)) 
             AND m2.season = :season AND m2.championship = c) AS lost'
            )
            ->addSelect('(SELECT CASE WHEN (COUNT(m3) > 0) THEN COUNT(m3) ELSE 0 END FROM AppBundle\Entity\Match as m3
             INNER JOIN AppBundle\Entity\Result as r3 WITH m3 = r3.match WHERE 
             ((m3.home = t AND r3.homeGoal = r3.visitorGoal) OR (m3.visitor = t AND r3.visitorGoal = r3.homeGoal)) 
             AND m3.season = :season AND m3.championship = c) AS draw'
            )
            ->addSelect('(SELECT COALESCE(SUM(r4.homeGoal), 0) FROM AppBundle\Entity\Match as m4
             INNER JOIN AppBundle\Entity\Result as r4 WITH m4 = r4.match WHERE
             m4.season = :season AND m4.championship = c AND m4.home = t) AS home_goal'
            )
            ->addSelect('(SELECT COALESCE(SUM(r5.visitorGoal), 0) FROM AppBundle\Entity\Match as m5
             INNER JOIN AppBundle\Entity\Result as r5 WITH m5 = r5.match WHERE
             m5.season = :season AND m5.championship = c AND m5.visitor = t) AS away_goal'
            )
            ->addSelect('(SELECT COALESCE(SUM(r6.homeYellowCard), 0) FROM AppBundle\Entity\Match as m6
             INNER JOIN AppBundle\Entity\Result as r6 WITH m6 = r6.match WHERE
             m6.season = :season AND m6.championship = c AND m6.home = t) AS home_yellow_card'
            )
            ->addSelect('(SELECT COALESCE(SUM(r7.visitorYellowCard), 0) FROM AppBundle\Entity\Match as m7
             INNER JOIN AppBundle\Entity\Result as r7 WITH m7 = r7.match WHERE
             m7.season = :season AND m7.championship = c AND m7.visitor = t) AS away_yellow_card'
            )
            ->addSelect('(SELECT COALESCE(SUM(r8.homeRedCard), 0) FROM AppBundle\Entity\Match as m8
             INNER JOIN AppBundle\Entity\Result as r8 WITH m8 = r8.match WHERE
             m8.season = :season AND m8.championship = c AND m8.home = t) AS home_red_card'
            )
            ->addSelect('(SELECT COALESCE(SUM(r9.visitorRedCard), 0) FROM AppBundle\Entity\Match as m9
             INNER JOIN AppBundle\Entity\Result as r9 WITH m9 = r9.match WHERE
             m9.season = :season AND m9.championship = c AND m9.visitor = t) AS away_red_card'
            )
            ->addSelect('(SELECT COALESCE(SUM(r10.visitorGoal), 0) FROM AppBundle\Entity\Match as m10
             INNER JOIN AppBundle\Entity\Result as r10 WITH m10 = r10.match WHERE
             m10.season = :season AND m10.championship = c AND m10.home = t) AS home_goal_concede'
            )
            ->addSelect('(SELECT COALESCE(SUM(r11.homeGoal), 0) FROM AppBundle\Entity\Match as m11
             INNER JOIN AppBundle\Entity\Result as r11 WITH m11 = r11.match WHERE
             m11.season = :season AND m11.championship = c AND m11.visitor = t) AS away_goal_concede'
            )
            ->addSelect('(SELECT CASE WHEN (COUNT(m12) > 0) THEN COUNT(m12) ELSE 0 END FROM AppBundle\Entity\Match as m12
             INNER JOIN AppBundle\Entity\Result as r12 WITH m12 = r12.match WHERE m12.home = t 
             AND m12.season = :season AND m12.championship = c) AS home_play'
            )
            ->addSelect('(SELECT CASE WHEN (COUNT(m13) > 0) THEN COUNT(m13) ELSE 0 END FROM AppBundle\Entity\Match as m13
             INNER JOIN AppBundle\Entity\Result as r13 WITH m13 = r13.match WHERE 
             m13.home = t AND r13.homeGoal > r13.visitorGoal
             AND m13.season = :season AND m13.championship = c) AS home_win'
            )
            ->addSelect('(SELECT CASE WHEN (COUNT(m14) > 0) THEN COUNT(m14) ELSE 0 END FROM AppBundle\Entity\Match as m14
             INNER JOIN AppBundle\Entity\Result as r14 WITH m14 = r14.match WHERE 
             m14.home = t AND r14.homeGoal < r14.visitorGoal  
             AND m14.season = :season AND m14.championship = c) AS home_lost'
            )
            ->addSelect('(SELECT CASE WHEN (COUNT(m15) > 0) THEN COUNT(m15) ELSE 0 END FROM AppBundle\Entity\Match as m15
             INNER JOIN AppBundle\Entity\Result as r15 WITH m15 = r15.match WHERE 
             m15.home = t AND r15.homeGoal = r15.visitorGoal
             AND m15.season = :season AND m15.championship = c) AS home_draw'
            )
            ->addSelect('(SELECT CASE WHEN (COUNT(m16) > 0) THEN COUNT(m16) ELSE 0 END FROM AppBundle\Entity\Match as m16
             INNER JOIN AppBundle\Entity\Result as r16 WITH m16 = r16.match WHERE m16.visitor = t 
             AND m16.season = :season AND m16.championship = c) AS away_play'
            )
            ->addSelect('(SELECT CASE WHEN (COUNT(m17) > 0) THEN COUNT(m17) ELSE 0 END FROM AppBundle\Entity\Match as m17
             INNER JOIN AppBundle\Entity\Result as r17 WITH m17 = r17.match WHERE 
             m17.visitor = t AND r17.visitorGoal > r17.homeGoal
             AND m17.season = :season AND m17.championship = c) AS away_win'
            )
            ->addSelect('(SELECT CASE WHEN (COUNT(m18) > 0) THEN COUNT(m18) ELSE 0 END FROM AppBundle\Entity\Match as m18
             INNER JOIN AppBundle\Entity\Result as r18 WITH m18 = r18.match WHERE 
             m18.visitor = t AND r18.visitorGoal < r18.homeGoal  
             AND m18.season = :season AND m18.championship = c) AS away_lost'
            )
            ->addSelect('(SELECT CASE WHEN (COUNT(m19) > 0) THEN COUNT(m19) ELSE 0 END FROM AppBundle\Entity\Match as m19
             INNER JOIN AppBundle\Entity\Result as r19 WITH m19 = r19.match WHERE 
             m19.visitor = t AND r19.visitorGoal = r19.homeGoal
             AND m19.season = :season AND m19.championship = c) AS away_draw'
            )
            ->setParameter('id', $championshipId)
            ->setParameter('season', $season)
            ->setParameter('createdAt', $period['createdAt'])
            ->setParameter('updatedAt', $period['updatedAt'])
            ->groupBy('t.id')
            ->addOrderBy('home_goal', 'DESC')
            ->addOrderBy('t.name', 'ASC')
            ->addOrderBy('t.id', 'DESC');

        // limit
        if($limit){
            $q->setMaxResults($limit);
        }

        try {
            $teams = $q->getQuery()->getResult();
            foreach ($teams as &$team){
                $team['points'] = ($team['win'] * 3) + $team['draw'];
                $team['goals'] = $team['home_goal'] + $team['away_goal'];
                $team['c_goals'] = $team['home_goal_concede'] + $team['away_goal_concede'];
                $team['av_goals'] = $team['goals'] - $team['c_goals'];
                $team['yellow_card'] = $team['home_yellow_card'] + $team['away_yellow_card'];
                $team['red_card'] = $team['home_red_card'] + $team['away_red_card'];
            }
        } catch (NoResultException $e) {
            throw new NoResultException(sprintf('Unable to order teams'), null, 0, $e);
        }

        return $teams;
    }
}
